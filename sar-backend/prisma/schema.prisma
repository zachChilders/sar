// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"

  // OpenSSL support varies across hosted environments
  binaryTargets = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  Member
  Admin
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  memberId Int
  role     Role[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Member Member @relation(fields: [memberId], references: [id])
}

model Member {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  ham       String?
  address   String
  city      String
  state     String
  zipcode   String
  email     String
  joined    DateTime @default(now())
  phoneHome String
  phoneWork String?
  phoneCell String?
  status    String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User User[]
}

model Callout {
  calloutId      Int      @id @default(autoincrement())
  calloutMessage String
  createdAt      DateTime @default(now())
}

model Training {
  trainingId    Int      @id @default(autoincrement())
  trainingTitle String
  createdAt     DateTime @default(now())
}

model TrainingClass {
  trainingClassId Int      @id @default(autoincrement())
  trainingId      Int
  trainingDate    DateTime
  createdAt       DateTime @default(now())
}

model Operation {
  id             Int      @id @default(autoincrement())
  number         Int
  sequenceNumber Int      @default(autoincrement())
  start          DateTime
  end            DateTime
  title          String
  notes          String
  createdAt      DateTime @default(now())
}

model MemberOperation {
  id          Int      @id @default(autoincrement())
  memberId    Int
  operationId Int
  createdAt   DateTime @default(now())
}
